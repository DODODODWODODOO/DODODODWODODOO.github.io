데이터 베이스

sql : DBMS 질의 언어
 데이터 조회 - select
                    핼 단위 조회 : select * from 테이블명 where~~~
                     열 단위 조회 


ctrl / : 주석달기
오라클 주석 : -- 

오라클 설치 dbms
               데이터 베이스 서버
               sql plus 응용프로그램 이 같이 설치


DBeaver 설치 오라클 서버 연결을 하고 SQL 문을 수행할수 있도록 처리하는 편집기(소프트웨어)

사용자 추가 hr(오라클 공식 샘플 계정), scoot(hr 계정의 심플 계정)


sql 연습

sql 데이터 베이스 서버의 질의(query) 를 할수있는 언어
     데이터 베이스 서버랑 소통하려면 sql 을 알아야함

sql 은 대소문자를 구별하지 않는다 단, 비밀번호는 구별함


데이터 베이스- 자바 - 자바+ 데이터 베이스 연동 프로그램
html +css +javascript + ajax - spring boot - 프로젝트

오라클은 사용자마다 데이터 베이스가 개별로 생성됨 : 스키마가 생성됨

xe : 오라클 xe21.x 버전

orcl 오라클 다른버전 다운로드 시 기본 데이터베이스 이름


문자는 코드 (유니코드 utf-8) 로 변환이 가능하다
A : 65 B : 66, ..........
a : 97 b: 98,..............






d2coding 다운로드 설치
app.diagrams.net
aquerytool.com
drawio
erd
dbeaver
github
roadmap.sh





cd d:\\source\\oraclesource
git add . 
git commit -m "ddd"
git pull
esc > :wq
git push



------------------------------------------------------------------------------------------
java : 웹 개발(배민,은행,증권,....)
        SI 
1. 컴파일러 설치 : 17 JDK 설치
                       자바 언어를 번역해서 컴퓨터가 이해할 수 있는 언어로 변경
                       자바 => ORACLE
                       

2. Editor -> eclipse(무료), intellij(무료, 유료), vscode








git : 리눅스 운영체제를 만든 사람 리누스 토발즈가 만든 프로그램
      리눅스 => 기업용 서버의 대부분 운영체제로 사용됨
      컴퓨터 파일의 변경사항 추적하고 여러 사람들 간 파일 공유가 가능한 분산버전관리 시스템
      
      git init => 현재 폴더를 로컬 저장소로 사용(현재폴더를 관리해줘)
      git add . => 현재 폴더안의 모든 파일을 관리 하기 위해서 stage 영역으로 올려줘
        unstage 영역 / stage 영역
      git commit -m "메세지" => stage 영역에 있는 파일을 로컬 저장소로 이동


      git remote add origin 깃헙 저장소 주소 : 로컬 저장소와 원격 저장소 연동하기
      git push -u origin main : 로컬 저장소 내용을 원격 저장소로 복사 붙여넣기 
      
      git push

      .gitignore : 관리하지 않을 파일들 기록
                    https://www.toptal.com/developers/gitignore/ 파일 작성 편하게 도와줌
      




1. git 설치
2. github 회원가입


git init
gitignore  작성
git add .   :관리할 파일들......
git commit - m "ch1 프로젝트 작성"
git push -u origin main

ctrl+ shift + p
git add Remote 선택
깃헙 주소 붙여넣기
origin 
vs code Publisg Branch 클릭

shift + alt + 아래방향키 : 아래로 복사



자바 기본단위 : 클래스
ch1 => 패키지(관련있는 클래스들 모음)
main() => 메소드
이름() => 메소드

/* : 여러 줄에 주석을 달고 싶을때 사용



오버로딩
- 하나의 클래스에 동일한 이름으로 존재
- ()안에 인자의 개수, 타입이 달라야 함

생성자 오버로딩

메소드 오버로딩
리턴타입 update(){}
리턴타입 update(int a){}

리턴타입 sum(){}


타입
기본형 : int(byte,short), long ,char, boolean, float, double
참조형 : 배열, 클래스


클래스 배열 초기화 하면 null

패키지(관련있는 클래스들 모음) = 폴더





Excrption(예외)
1) 컴파일 예외
2) 런타임 예외






오픈 API => 사용법에 따라 사용
	    데이터(xls,csv,json,xml) 만 제공

	    xls,csv,json 파일 : db 삽입 가능
                                      jdbc 프로그램 작성 가능

	   실시간 요청 : fetch 데이터 가져온 후 서비스 프로그램 작성 가능
             	        키 발급, 요청 제한

xhr
jquery
fetch
==> axios(설치)



웹 어플리케이션

1. maven 설치
- 자바 빌드 도구 => 빌드 자동화
- 빌드 : 프로젝트 생성 => 라이브러리 설정 => 코드 작업 => 컴파일 => 테스트 => 패키지 생성 => 배포
- 패키지 : 압축파일 (jar, war)
- mvn compile
- mvn package


2. 톰캣 서버 설치
- 웹 어플리케이션 동작을 위해서는 서버가 필요함
- 자바로 작성된 프로그램을 해석해서 응답이 가능해야함
- WAS (Web Application Server)

- 웹서버 (html, css, js 응답이 가능한 서버) : 아파치 웹서버, NginX

3. Java EE 
앞에서 배웠던 자바 개발 => Java SE (Standard Edition)

EE (Enterprise Edition) : SE + 웹 어플리케이션 개발에 필요한 라이브러리 추가
			JSP / Servlet
JSP / Servlet 개발 시 개발자가 해야 할 작업이 많음 ==> 스프링 프레임워크

4. C:\Users\soldesk\AppData\Roaming\Code\User\snippets\jsp.json

자바 개발 환경설정
1) JDK 버전 선택 (java8 => java11 / java17 (spring boot 3.x 에서 필요))
2) IDE (통합 개발 환경) : Eclipse (무료, 자바 개발 특화)
		       IntelliJ (무료, 상용)
		       VSCode (무료)


JSP == Servlet

JSP (Java Server Page)
 HTML + Java 코드 섞임

Servlet
 Java 코드

 브라우저 화면단 작업 : html, jsp(자바코드 사용), servlet(html 사용이 불편함 => 컨트롤러로 주로 사용)

http://localhost:8080/web1/ 요청 ==> http://localhost:8080/web1/index.jsp

사용자의 요청에 따라서 응답하는 프로그램 작성 ==> CGI (Common Gateway Interface)
 - 사용자의 요청 가져오기
 - DB 작업
 - 요청에 응답

 CGI 무엇으로 만들 것인가? java, python, 닷넷, php

404 : Not Found

http://localhost:8080/basic/input.html
http://localhost:8080/hello

